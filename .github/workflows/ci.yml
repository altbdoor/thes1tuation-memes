name: Build the site
on:
  push:
    branches: ["master"]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - run: sudo timedatectl set-timezone Asia/Kuala_Lumpur

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - run: |
          python --version
          python scripts/fetch-imgur-data.py
          python scripts/parse-discord-data.py
        env:
          IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}

      - uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ hashFiles('**/Dockerfile') }}

      - uses: actions/configure-pages@v5
        id: pages

      - name: Build the Docker image
        run: |
          if [[ "$(docker images --quiet $IMAGE_NAME 2> /dev/null)" == "" ]]; then
              docker build . --file Dockerfile --tag $IMAGE_NAME
          fi

          docker run --rm --volume "$PWD:/srv" $IMAGE_NAME jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
          sudo chown -R $(id -u):$(id -g) ./_site/
        env:
          IMAGE_NAME: jekyll-dev:latest

      - name: Sanitize referrer policy
        run: |
          curl -OL https://github.com/altbdoor/clean-links/releases/latest/download/clean-links-linux.tgz
          tar xzf clean-links-linux.tgz
          ./clean-links run --fix-all ./_site/

      - uses: actions/upload-pages-artifact@v3
        with:
          path: "./_site"

      - uses: actions/deploy-pages@v4
        id: deployment
