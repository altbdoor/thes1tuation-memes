name: Build the site
on:
  push:
    branches: ["master"]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      JEKYLL_IMG_NAME: jekyll-dev:latest
      JEKYLL_TAR_NAME: /tmp/jekyll-img.tar

    runs-on: ubuntu-latest
    steps:
      - run: sudo timedatectl set-timezone Asia/Kuala_Lumpur

      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "scripts/go.mod"
          cache-dependency-path: "scripts/go.sum"

      - name: Run main script
        working-directory: "./scripts/"
        run: |
          go run ./*.go -discord -imgur
        env:
          IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}

      - uses: actions/cache@v4
        id: restore-docker
        with:
          path: ${{ env.JEKYLL_TAR_NAME }}
          key: docker-${{ hashFiles('**/Dockerfile') }}

      - name: Load Docker image cache
        if: steps.restore-docker.outputs.cache-hit == 'true'
        run: docker load --input $JEKYLL_TAR_NAME

      - name: Build Docker image when cache is missing
        if: steps.restore-docker.outputs.cache-hit != 'true'
        run: |
          docker build . --file Dockerfile --tag $JEKYLL_IMG_NAME
          docker save --output $JEKYLL_TAR_NAME $JEKYLL_IMG_NAME

      - uses: actions/configure-pages@v5
        id: pages

      - name: Run the Docker image
        run: |
          JEKYLL_URL="${{ steps.pages.outputs.origin }}"
          JEKYLL_BASEURL="${{ steps.pages.outputs.base_path }}"
          sed -i "s|^url: .*|url: $JEKYLL_URL|" _config.yml

          echo "(i) JEKYLL_URL = $JEKYLL_URL"
          echo "(i) JEKYLL_BASEURL = $JEKYLL_BASEURL"

          docker run --rm --volume "$PWD:/srv" $JEKYLL_IMG_NAME \
            bundle exec jekyll build --baseurl "$JEKYLL_BASEURL"

          sudo chown -R $(id -u):$(id -g) ./_site/

      - name: Sanitize referrer policy
        run: |
          curl -OL https://github.com/altbdoor/clean-links/releases/latest/download/clean-links-linux.tgz
          tar xzf clean-links-linux.tgz
          ./clean-links run --fix-all ./_site/

      - uses: actions/upload-pages-artifact@v3
        with:
          path: "./_site"

      - uses: actions/deploy-pages@v4
        id: deployment
